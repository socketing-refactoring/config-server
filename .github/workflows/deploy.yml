name: Docker Build and Push and Deploy

on:
  push:
    branches:
      - dev

jobs:
  push_to_docker_hub:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21 (for Gradle build)
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'liberica'

      - name: Create application.yml from GitHub Secrets
        run: |
          pwd
          echo "${{ secrets.APPLICATION_YML }}" > ./src/main/resources/application.yml

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/socketing:config-server

      - name: Setup SSH
        run: |
          pwd
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ec2.pem
          sudo chmod 600 ec2.pem
          ls -al
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.EC2_HOST}} >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to EC2
        run: |
          scp -i ec2.pem ./docker-compose.app.yml "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/config-server/app/docker-compose.app.yml"
          sudo rm -f ec2.pem

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd config-server/app
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker compose -f docker-compose.app.yml up -d --build
            docker image prune -a -f
